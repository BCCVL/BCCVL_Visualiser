[buildout]

# Add the egg defined by setup.py in the current directory to the list of candidates.
develop = .

extends =
    versions.cfg

socket-timeout = 3
how-picked-versions = true
newest = false

versions = versions

extensions =
    buildout.threatlevel

eggs-directory = eggs

#activate this if you want to use a cache dir, you will have to create the dir
#download-cache = ${buildout:directory}/downloads

parts =
    python
    libxml2
    proj4
    gdal
    mapserver
    pyramid

eggs =
    ZopeSkel

[python]
interpreter = python
recipe = zc.recipe.egg
eggs =

interpreter_path =  ${buildout:directory}/bin/python

[libxml2]
recipe = hexagonit.recipe.cmmi
prefix = ${buildout:directory}/parts/libxml2
url = ftp://xmlsoft.org/libxml2/libxml2-2.9.1.tar.gz
bin_path = ${:prefix}/bin/xml2-config
configure-options =
    --with-python=no
    --prefix=${:prefix}

[gdal]
recipe = hexagonit.recipe.cmmi
prefix = ${buildout:directory}/parts/gdal
lib_directory = ${:prefix}/lib
url = http://download.osgeo.org/gdal/1.10.0/gdal-1.10.0.tar.gz
configure-options =
    --with-python=${python:interpreter_path}
    --prefix=${:prefix}
vars =
    LD_LIBRARY_PATH ${gdal:lib_directory}
initialization =
    import os
    vars = """${:vars}"""
    os.environ.update(dict(line.split() for line in vars.strip().split('\n')))
bin_path = ${:prefix}/bin/gdal-config

[proj4]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/proj/proj-4.8.0.tar.gz
bin_path = ${buildout:directory}/parts/proj4

[mapserver]
recipe = hexagonit.recipe.cmmi
url = http://download.osgeo.org/mapserver/mapserver-6.2.1.tar.gz
configure-options =
    --enable-python-mapscript
    --with-wfs
    --with-wcs
    --with-python=${python:interpreter_path}
    --with-proj=${proj4:bin_path}
    --with-gdal=${gdal:bin_path}
    --with-ogr=${gdal:bin_path}
    --with-xml2-config=${libxml2:bin_path}

[pyramid]
recipe = zc.recipe.egg
dependent-scripts = true
eggs =
    BCCVL_Visualiser
    ${buildout:eggs}
interpreter = pyramid_py
initialization = ${gdal:initialization}

